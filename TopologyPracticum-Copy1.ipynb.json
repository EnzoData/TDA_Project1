{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Enzo Rodriguez"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Lower Star Image Filtrations for Scanning\n",
    "Here I take the notebook\n",
    "Lower Star Image Filtrations\n",
    "from ripser.py and adjust it to create a left-to-right\n",
    "scan on a letter from letters.csv and I would also perform a right-to-left scan on each letter. Then I plan on inverting the image and performing an up-to-down scan follwed by a down-to-up scan.\n",
    "First let's import everything they imported.\n",
    "I also import csv to read our csv file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy \n",
    "from scipy import ndimage\n",
    "import PIL\n",
    "from persim import plot_diagrams\n",
    "from ripser import ripser, lower_star_img \n",
    "import csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Left-to-right Scanning Example\n",
    "Our function on the image will be very simple: if the value we see in the corresponding row is 0 then the value on the pixel is 100, if the value is 1 then the value is the x1 coordinate. I'll be scanning the leters in sequential order from A-Z first left-to-right."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100   5   6 100 100 100 100]\n",
      " [100 100 100 100   5   6 100 100 100 100]\n",
      " [100 100 100   4   5   6 100 100 100 100]\n",
      " [100 100 100   4   5   6   7 100 100 100]\n",
      " [100 100 100   4 100   6   7 100 100 100]\n",
      " [100 100   3   4   5   6   7 100 100 100]\n",
      " [100 100   3 100 100 100   7 100 100 100]\n",
      " [100   2   3 100 100 100   7   8 100 100]\n",
      " [100   2 100 100 100 100 100   8 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[0,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)/10) \n",
    "        column=(k-1)%10 \n",
    "        letter[row,column]=k%10\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3152: UserWarning: Attempting to set identical left==right results\n",
      "in singular transformations; automatically expanding.\n",
      "left=2.0, right=2.0\n",
      "  'left=%s, right=%s') % (left, right))\n",
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3471: UserWarning: Attempting to set identical bottom==top results\n",
      "in singular transformations; automatically expanding.\n",
      "bottom=2.0, top=2.0\n",
      "  'bottom=%s, top=%s') % (bottom, top))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function lower_star_img in module ripser.ripser:\n",
      "\n",
      "lower_star_img(img)\n",
      "    Construct a lower star filtration on an image\n",
      "    \n",
      "    Parameters\n",
      "    ----------\n",
      "    img: ndarray (M, N)\n",
      "        An array of single channel image data\n",
      "    \n",
      "    Returns\n",
      "    -------\n",
      "    I: ndarray (K, 2)\n",
      "        A 0-dimensional persistence diagram corresponding to the sublevelset filtration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(lower_star_img)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 2. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Right-to-left Scanning Example\n",
    "Our function on the image will be very simple: if the value we see in the corresponding row is 0 then the value on the pixel is 100, if the value is 1 then the value is the x1 coordinate.\n",
    "I'll be scanning the leters in sequential order from A-Z right-to-left."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100   7   6   5   4 100 100 100 100]\n",
      " [100 100   7 100 100   4   3 100 100 100]\n",
      " [100 100   7 100 100   4   3 100 100 100]\n",
      " [100 100   7   6   5   4 100 100 100 100]\n",
      " [100 100   7   6   5   4   3   2 100 100]\n",
      " [100 100   7 100 100 100   3   2 100 100]\n",
      " [100 100   7 100 100 100 100   2 100 100]\n",
      " [100 100   7 100 100   4   3   2 100 100]\n",
      " [100 100   7   6   5   4 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[1,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)/10) \n",
    "        column=(k-1)%10 \n",
    "        letter[row,column]=10-k%10 #this portion is how to scan the images right-to-left\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3.  4.]\n",
      " [ 2. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2, 2)\n",
      "[[ 3.  4.]\n",
      " [ 2. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Down-to-up Scanning Example\n",
    "Our function on the image will be very simple: if the value we see in the corresponding row is 0 then the value on the pixel is 100, if the value is 1 then the value is the x1 coordinate. I’ll be scanning the leters in sequential order from A-Z first left-to-right inverted, which is down-to-up."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100 100 100   2   2 100 100 100 100]\n",
      " [100 100   3   3   3   3   3   3 100 100]\n",
      " [100   4   4 100 100 100   4   4 100 100]\n",
      " [100   5 100 100 100 100 100   5 100 100]\n",
      " [100   6 100 100 100 100 100   6 100 100]\n",
      " [100   7 100 100 100 100 100   7   7 100]\n",
      " [100   8 100 100 100 100 100   8 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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3bp10dfXF/Pnz4/a2toYHByMDRs2xA033FDu0SrChIvNZ/72WjjFYvGEro9TzVatWhVvvfVWvPLKK+UepaL09vbG6tWr41e/+lVMmTKl3ONUrKGhoWhra4uNGzdGRMTixYvjd7/7XXR2dorN/7N9+/Z48sknY+vWrbFw4cLYt29frFmzJmbNmhW33HJLuccruwkXm3POOSdqa2uPWcUcPnz4mNUOEXfeeWfs2LEjdu3adVKvI1QNenp64vDhw9Ha2jq8b3BwMHbt2hWPPfZYDAwMRG1tbRknrAwzZ86M888/f8S+BQsWxM9//vMyTVSZ7rnnnrj33nvj+uuvj4iICy64IN57770oFApiExPwPZvTTz89Wltbo7u7e8T+7u7uWLp0aZmmqjzFYjFWrVoVv/jFL+LXv/51NDc3l3ukinPFFVfE22+/Hfv27Rve2tra4sYbb4x9+/YJzf9ZtmzZMR+b379/f8ydO7dME1WmTz755JgrV9bW1vro8/+ZcCubiIi1a9fGzTffHG1tbXHJJZdEV1dXHDhwIO64445yj1YxOjo6YuvWrfHMM89EfX398EqwsbExpk6dWubpKkN9ff0x72GdccYZMX36dO9t/T933313LF26NDZu3Bhf+cpX4vXXX4+urq7o6uoq92gV5dprr40NGzbEueeeGwsXLoy9e/fGww8/HLfddlu5R6sMxQnqxz/+cXHu3LnF008/vbhkyZLizp07yz1SRYmIv7tt3ry53KNVtC984QvF1atXl3uMivPLX/6y2NLSUqyrqyvOnz+/2NXVVe6RKk5/f39x9erVxXPPPbc4ZcqU4rx584r33XdfcWBgoNyjVYQJ+T0bACaWCfeeDQATj9gAkE5sAEgnNgCkExsA0okNAOnEBoB0YgNAOrEBIJ3YAJBObABI97/9M2L1efLqKQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt\n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[2,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)%10)\n",
    "        column=(k-1)/10\n",
    "        letter[row,column]=k%10\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 2. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Up-to-down Inverted Scanning Example\n",
    "Our function on the image will be very simple: if the value we see in the corresponding row is 0 then the value on the pixel is 100, if the value is 1 then the value is the x1 coordinate. I’ll be scanning the leters in sequential order from A-Z right-to-left inverted, which is up-to-down."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]\n",
      " [100   7   7   7   7   7   7   7   7 100]\n",
      " [100   6 100 100 100 100 100 100   6 100]\n",
      " [100   5 100 100 100 100 100 100   5 100]\n",
      " [100   4 100 100 100 100 100   4   4 100]\n",
      " [100   3   3 100 100 100 100   3   3 100]\n",
      " [100 100   2   2   2   2   2   2 100 100]\n",
      " [100 100 100 100   1   1   1 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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6liyZEm0tLSUe5yK8sQTT8TevXtjz5495R6lYr3zzjvR0dERq1evjm9/+9vx2muvxYoVK6K2tja+8Y1vlHu8irFmzZro7e2N2bNnR01NTQwMDMSGDRvi5ptvLvdoFWHMxeYTf38vnGKxeEr3x6lmd999d7z55pvx0ksvlXuUitLT0xMrV66M3/zmNzFx4sRyj1OxBgcHo62tLTZu3BgREfPnz4/f//730dHRITb/x44dO2Lbtm2xffv2mDt3buzfvz9WrVoV06dPj9tvv73c45XdmIvN+eefHzU1NSesYo4cOXLCaoeI5cuXx86dO2P37t2n9T5C1aC7uzuOHDkSra2tQ/sGBgZi9+7dsXnz5ujv74+ampoyTlgZpk2bFhdddNGwfXPmzIlf/vKXZZqoMt17772xdu3auOmmmyIi4uKLL4533303CoWC2MQYfM9mwoQJ0draGl1dXcP2d3V1xaJFi8o0VeUpFotx9913x69+9av47W9/G83NzeUeqeJcddVV8dZbb8X+/fuHtra2trjlllti//79QvO/Fi9efMLH5g8cOBAzZ84s00SV6aOPPjrhzpU1NTU++vy/xtzKJiJi9erVcdttt0VbW1tcdtll0dnZGQcPHoy77rqr3KNVjPb29ti+fXs89dRTUVdXN7QSbGhoiEmTJpV5uspQV1d3wntYZ599dkyZMsV7W//HPffcE4sWLYqNGzfG1772tXjttdeis7MzOjs7yz1aRbnhhhtiw4YNccEFF8TcuXNj37598eCDD8add95Z7tEqQ3GM+ulPf1qcOXNmccKECcUFCxYUd+3aVe6RKkpEfOr22GOPlXu0ivbFL36xuHLlynKPUXF+/etfF1taWoq1tbXF2bNnFzs7O8s9UsXp6+srrly5snjBBRcUJ06cWJw1a1bxvvvuK/b395d7tIowJv/OBoCxZcy9ZwPA2CM2AKQTGwDSiQ0A6cQGgHRiA0A6sQEgndgAkE5sAEgnNgCkExsA0v0PQwuDL+n8JNwAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt\n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[3,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)%10)\n",
    "        column=(k-1)/10\n",
    "        letter[row,column]=10-k%10\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1. inf]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3152: UserWarning: Attempting to set identical left==right results\n",
      "in singular transformations; automatically expanding.\n",
      "left=1.0, right=1.0\n",
      "  'left=%s, right=%s') % (left, right))\n",
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3471: UserWarning: Attempting to set identical bottom==top results\n",
      "in singular transformations; automatically expanding.\n",
      "bottom=1.0, top=1.0\n",
      "  'bottom=%s, top=%s') % (bottom, top))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 1. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Angle Scanning Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100   3   4   5   6   7   8 100 100]\n",
      " [100 100   3 100 100 100 100 100 100 100]\n",
      " [100 100   3 100 100 100 100 100 100 100]\n",
      " [100 100   3   4   5   6   7   8 100 100]\n",
      " [100 100   3 100 100 100 100 100 100 100]\n",
      " [100 100   3 100 100 100 100 100 100 100]\n",
      " [100 100   3 100 100 100 100 100 100 100]\n",
      " [100 100   3   4   5   6   7   8 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[4,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)/10) \n",
    "        column=(k-1)%10 \n",
    "        letter[row,column]=max(k%10,int(k-1)%10)\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3. inf]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3152: UserWarning: Attempting to set identical left==right results\n",
      "in singular transformations; automatically expanding.\n",
      "left=3.0, right=3.0\n",
      "  'left=%s, right=%s') % (left, right))\n",
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3471: UserWarning: Attempting to set identical bottom==top results\n",
      "in singular transformations; automatically expanding.\n",
      "bottom=3.0, top=3.0\n",
      "  'bottom=%s, top=%s') % (bottom, top))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 3. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Diagonal Scanning Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100   9   6   5   6   9 100 100 100]\n",
      " [100 100   2 100 100 100 100 100 100 100]\n",
      " [100 100   5 100 100 100 100 100 100 100]\n",
      " [100 100   8   8   0   4   0 100 100 100]\n",
      " [100 100   1 100 100 100 100 100 100 100]\n",
      " [100 100   4 100 100 100 100 100 100 100]\n",
      " [100 100   7 100 100 100 100 100 100 100]\n",
      " [100 100   0 100 100 100 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[5,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "        row=int((k-1)/10) \n",
    "        column=(k-1)%10 \n",
    "        letter[row,column]=(column+row)*k%10\n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.  4.]\n",
      " [ 5.  6.]\n",
      " [ 1.  7.]\n",
      " [ 0.  8.]\n",
      " [ 2.  8.]\n",
      " [ 0. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6, 2)\n",
      "[[ 0.  4.]\n",
      " [ 5.  6.]\n",
      " [ 1.  7.]\n",
      " [ 0.  8.]\n",
      " [ 2.  8.]\n",
      " [ 0. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Diagonal scanning-from-upper-left corner Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100   4   5   6   7   8 100 100 100]\n",
      " [100 100   5 100 100 100 100 100 100 100]\n",
      " [100   5   6 100 100 100 100 100 100 100]\n",
      " [100   6   7 100 100 100 100 100 100 100]\n",
      " [100   7   8   9  10  11  12 100 100 100]\n",
      " [100 100   9 100 100 100  13 100 100 100]\n",
      " [100 100  10  11  12  13  14 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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2ACQTmwASCc2AKQTGwDSiQ0A6cQGgHRiA0A6sQEgndgAkE5sAEgnNgCkExsA0okNAOnEBoB0YgNAOrEBIJ3YAJBObABIJzYApBMbANKNHek7LBaLERHR80HfSN81AGfpk8fuTx7Lh2rEY3Py5MmIiJix4L9G+q4BOEdOnjwZjY2NQ759TbHUPJ2lvr6+OHbsWNTX10dNTc2w/56enp6YNm1adHV1RUNDwzmcsLo4T0PjPA2N8zQ01XyeisVinDx5MqZMmRJjxgz9lZgRX9mMGTMmpk6des7+voaGhqr7YWZwnobGeRoa52loqvU8lbKi+YQ3CACQTmwASFf77W9/+9vlHmK4amtr47rrrouxY0f82cBRxXkaGudpaJynoXGeBhrxNwgA8NnjaTQA0okNAOnEBoB0YgNAOrEBIN2ojc2WLVti5syZMX78+GhpaYlXXnml3CNVlEKhEFdeeWXU19dHU1NTLF++PA4fPlzusSpaoVCImpqaWL16dblHqTjvvvtu3H777TFx4sQ4//zzY968edHZ2VnusSrKqVOn4uGHH46ZM2fGhAkTYtasWbFhw4bo6/OlwxGjNDY7duyI1atXx0MPPRQHDx6Ma665Jm688cY4evRouUerGLt37462trbYt29f7Nq1K06dOhVLliyJDz/8sNyjVaT9+/dHR0dHXHHFFeUepeK8//77sWjRojjvvPPixRdfjD/84Q/xwx/+MC688MJyj1ZRHn300XjyySdj8+bN8cc//jG+973vxfe///144oknyj1aRRiVn7O56qqrYsGCBdHe3t6/b86cObF8+fIoFAplnKxy/fWvf42mpqbYvXt3XHvtteUep6J88MEHsWDBgtiyZUt897vfjXnz5sXjjz9e7rEqxrp16+K3v/2tZw/+iWXLlsWkSZPixz/+cf++L33pS3H++efHT3/60zJOVhlG3crm448/js7OzliyZMmA/UuWLIlXX321TFNVvu7u7oiIuPjii8s8SeVpa2uLpUuXxg033FDuUSrSzp07o7W1NW655ZZoamqK+fPnx1NPPVXusSrO4sWL46WXXoojR45ERMQbb7wRe/fujZtuuqnMk1WGUfc9Cu+9916cPn06Jk2aNGD/pEmT4vjx42WaqrIVi8VYs2ZNLF68OJqbm8s9TkV59tln48CBA7F///5yj1Kx3n777Whvb481a9bEN77xjXjttdfi/vvvj7q6uvjqV79a7vEqxtq1a6O7uztmz54dtbW1cfr06di4cWPcdttt5R6tIoy62Hzi76+FUywWz+r6ONXs3nvvjTfffDP27t1b7lEqSldXV6xatSp+/etfx/jx48s9TsXq6+uL1tbW2LRpU0REzJ8/P37/+99He3u72PwPO3bsiKeffjq2b98ec+fOjUOHDsXq1atjypQpceedd5Z7vLIbdbG55JJLora2dtAq5sSJE4NWO0Tcd999sXPnztizZ885vY5QNejs7IwTJ05ES0tL/77Tp0/Hnj17YvPmzdHb2xu1tbVlnLAyTJ48OS677LIB++bMmRM/+9nPyjRRZXrwwQdj3bp1ceutt0ZExOWXXx7vvPNOFAoFsYlR+JrNuHHjoqWlJXbt2jVg/65du2LhwoVlmqryFIvFuPfee+PnP/95/OY3v4mZM2eWe6SKc/3118dbb70Vhw4d6t9aW1tjxYoVcejQIaH5b4sWLRr0tvkjR47EjBkzyjRRZfroo48GXbmytrbWW5//26hb2URErFmzJu64445obW2Nq6++Ojo6OuLo0aOxcuXKco9WMdra2mL79u3x/PPPR319ff9KsLGxMSZMmFDm6SpDfX39oNewLrjggpg4caLXtv6HBx54IBYuXBibNm2KL3/5y/Haa69FR0dHdHR0lHu0inLzzTfHxo0bY/r06TF37tw4ePBgPPbYY3H33XeXe7TKUBylfvSjHxVnzJhRHDduXHHBggXF3bt3l3ukihIR/3DbunVruUeraJ///OeLq1atKvcYFecXv/hFsbm5uVhXV1ecPXt2saOjo9wjVZyenp7iqlWritOnTy+OHz++OGvWrOJDDz1U7O3tLfdoFWFUfs4GgNFl1L1mA8DoIzYApBMbANKJDQDpxAaAdGIDQDqxASCd2ACQTmwASCc2AKQTGwDS/X/iP1za65kxjQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[6,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=k%10 + int((k-1)/10)   \n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 4. inf]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3152: UserWarning: Attempting to set identical left==right results\n",
      "in singular transformations; automatically expanding.\n",
      "left=4.0, right=4.0\n",
      "  'left=%s, right=%s') % (left, right))\n",
      "/Users/enzo/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py:3471: UserWarning: Attempting to set identical bottom==top results\n",
      "in singular transformations; automatically expanding.\n",
      "bottom=4.0, top=4.0\n",
      "  'bottom=%s, top=%s') % (bottom, top))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 4. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Batch process probing-from-lower-right Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 10)\n",
      "[[100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100   8 100 100 100   8 100 100 100]\n",
      " [100 100   7 100 100 100   7 100 100 100]\n",
      " [100 100   7   6   6   6   6 100 100 100]\n",
      " [100 100   7 100 100 100   5 100 100 100]\n",
      " [100 100   7 100 100 100   4 100 100 100]\n",
      " [100 100   7 100 100 100   3 100 100 100]\n",
      " [100 100   7 100 100 100   3 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]\n",
      " [100 100 100 100 100 100 100 100 100 100]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from numpy import genfromtxt \n",
    "import numpy as np\n",
    "# read in file of letters\n",
    "\n",
    "# read in file of letters\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # take first letter\n",
    "letter_one_line=letters[7,:]\n",
    "\n",
    "# initialize matrix of size 10x10 with all values 100\n",
    "letter=np.full((10, 10), 100)\n",
    "\n",
    "# convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "for k in range(1,101):\n",
    "    if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=max(9-(k-1)%10,9-int((k-1)/10)) \n",
    "print(letter.shape)\n",
    "print(letter)\n",
    "\n",
    "plt.imshow(letter)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.subplot(121)\n",
    "plt.imshow(letter)\n",
    "plt.colorbar()\n",
    "plt.title(\"Letter\")\n",
    "plt.subplot(122)\n",
    "plot_diagrams(dgm)\n",
    "plt.title(\"0-D Persistence Diagram\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 2)\n",
      "[[ 3. inf]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dgm = lower_star_img(letter)\n",
    "print(dgm.shape)\n",
    "print(dgm)\n",
    "plot_diagrams(dgm)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Looping through all the letters in every direction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process scanning-from-left-to-right of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Left-to-right scanning through loops\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmLR = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=k%10            \n",
    "    dgmLR[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 4.,  5.],\n",
      "       [ 4., inf]]), array([[ 4.,  6.],\n",
      "       [ 4., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 6.,  7.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 3.,  8.],\n",
      "       [ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3.,  4.],\n",
      "       [ 3., inf]]), array([[ 3., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmLR[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A digram\n",
    "print(dgmLR[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3.  7.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print z diagram\n",
    "print(dgmLR[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process scanning-right-to-left of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Right-to-left scanning through loops\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmRL = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=10-k%10            \n",
    "    dgmRL[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 3.,  4.],\n",
      "       [ 2., inf]]), array([[ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 1., inf]]), array([[ 2.,  7.],\n",
      "       [ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 3.,  7.],\n",
      "       [ 3., inf]]), array([[ 3.,  7.],\n",
      "       [ 3., inf]]), array([[ 3., inf]]), array([[ 4.,  5.],\n",
      "       [ 4., inf]]), array([[ 4., inf]]), array([[ 3.,  6.],\n",
      "       [ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3.,  5.],\n",
      "       [ 3., inf]]), array([[ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 1., inf]]), array([[ 3.,  5.],\n",
      "       [ 3., inf]]), array([[ 3., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmRL[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A diagram \n",
    "print(dgmRL[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2.  6.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print Z diagram\n",
    "print(dgmRL[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process scanning-from-down-to-up of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Down-to-up scanning through loops\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmDU = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)%10) \n",
    "            column=(k-1)/10 \n",
    "            letter[row,column]=k%10            \n",
    "    dgmDU[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 4.,  5.],\n",
      "       [ 4., inf]]), array([[ 4.,  6.],\n",
      "       [ 4., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 6.,  7.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 3.,  8.],\n",
      "       [ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3.,  4.],\n",
      "       [ 3., inf]]), array([[ 3., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmDU[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A diagram \n",
    "print(dgmDU[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3.  7.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print Z diagram \n",
    "print(dgmDU[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process scanning-from-up-to-down of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Up-to-down scanning through loops\n",
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmUD = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)%10) \n",
    "            column=(k-1)/10 \n",
    "            letter[row,column]=10-k%10            \n",
    "    dgmUD[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 3.,  4.],\n",
      "       [ 2., inf]]), array([[ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 1., inf]]), array([[ 2.,  7.],\n",
      "       [ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 3.,  7.],\n",
      "       [ 3., inf]]), array([[ 3.,  7.],\n",
      "       [ 3., inf]]), array([[ 3., inf]]), array([[ 4.,  5.],\n",
      "       [ 4., inf]]), array([[ 4., inf]]), array([[ 3.,  6.],\n",
      "       [ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3.,  5.],\n",
      "       [ 3., inf]]), array([[ 2.,  7.],\n",
      "       [ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 1., inf]]), array([[ 3.,  5.],\n",
      "       [ 3., inf]]), array([[ 3., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmUD[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A diagram\n",
    "print(dgmUD[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2.  6.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print Z diagram\n",
    "print(dgmUD[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process angle scanning-from-upper-left of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmAngle = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=max(k%10,int(k-1)%10)            \n",
    "    dgmAngle[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 4.,  5.],\n",
      "       [ 4., inf]]), array([[ 4.,  6.],\n",
      "       [ 4., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 6.,  7.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 3.,  8.],\n",
      "       [ 3., inf]]), array([[ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 3.,  4.],\n",
      "       [ 3., inf]]), array([[ 3., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmAngle[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A digram\n",
    "print(dgmAngle[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3.  7.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print z diagram\n",
    "print(dgmAngle[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process probing scanning-from-lower-left of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmDiagonal = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=(column+row)*k%10            \n",
    "    dgmDiagonal[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 0.,  3.],\n",
      "       [ 0.,  4.],\n",
      "       [ 1.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 0.,  4.],\n",
      "       [ 0.,  4.],\n",
      "       [ 2.,  4.],\n",
      "       [ 2.,  5.],\n",
      "       [ 0.,  6.],\n",
      "       [ 0.,  6.],\n",
      "       [ 1.,  7.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 1.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 4.,  9.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 0.,  4.],\n",
      "       [ 5.,  6.],\n",
      "       [ 2.,  6.],\n",
      "       [ 1.,  7.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 0.,  4.],\n",
      "       [ 5.,  6.],\n",
      "       [ 1.,  7.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 4.,  9.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 5.,  6.],\n",
      "       [ 1.,  7.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  4.],\n",
      "       [ 0.,  4.],\n",
      "       [ 0.,  5.],\n",
      "       [ 2.,  5.],\n",
      "       [ 5.,  6.],\n",
      "       [ 0., inf]]), array([[ 1.,  7.],\n",
      "       [ 2.,  8.],\n",
      "       [ 1.,  8.],\n",
      "       [ 0., inf]]), array([[ 0.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0., inf]]), array([[ 2.,  5.],\n",
      "       [ 0.,  6.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 1.,  2.],\n",
      "       [ 2.,  5.],\n",
      "       [ 0.,  7.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 1.,  7.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 0.,  2.],\n",
      "       [ 2.,  4.],\n",
      "       [ 0.,  5.],\n",
      "       [ 2.,  6.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  4.],\n",
      "       [ 2.,  4.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 0.,  6.],\n",
      "       [ 5.,  6.],\n",
      "       [ 2.,  6.],\n",
      "       [ 1.,  8.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  5.],\n",
      "       [ 5.,  6.],\n",
      "       [ 2.,  6.],\n",
      "       [ 0.,  7.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 0.,  6.],\n",
      "       [ 5.,  6.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 1.,  2.],\n",
      "       [ 0.,  2.],\n",
      "       [ 2.,  4.],\n",
      "       [ 2.,  6.],\n",
      "       [ 0.,  7.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 2.,  5.],\n",
      "       [ 5.,  6.],\n",
      "       [ 0.,  7.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 4.,  9.],\n",
      "       [ 0., inf]]), array([[ 0.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0.,  5.],\n",
      "       [ 4.,  9.],\n",
      "       [ 4.,  9.],\n",
      "       [ 0., inf]]), array([[ 0.,  4.],\n",
      "       [ 1.,  7.],\n",
      "       [ 0.,  8.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 0.,  2.],\n",
      "       [ 2.,  3.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 0.,  2.],\n",
      "       [ 0.,  3.],\n",
      "       [ 0.,  5.],\n",
      "       [ 0.,  6.],\n",
      "       [ 5.,  6.],\n",
      "       [ 4.,  8.],\n",
      "       [ 0.,  9.],\n",
      "       [ 0., inf]]), array([[ 1.,  2.],\n",
      "       [ 0.,  2.],\n",
      "       [ 2.,  4.],\n",
      "       [ 0.,  4.],\n",
      "       [ 0., inf]]), array([[ 0.,  5.],\n",
      "       [ 0.,  8.],\n",
      "       [ 2.,  8.],\n",
      "       [ 0., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmDiagonal[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.  3.]\n",
      " [ 0.  4.]\n",
      " [ 1.  5.]\n",
      " [ 0.  5.]\n",
      " [ 0. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A digram\n",
    "print(dgmDiagonal[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2.  4.]\n",
      " [ 0.  5.]\n",
      " [ 5.  6.]\n",
      " [ 0.  8.]\n",
      " [ 4.  9.]\n",
      " [ 0. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print z diagram\n",
    "print(dgmDiagonal[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process diagonal scanning-from-upper-left of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmDiagonalULC = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=k%10 + int((k-1)/10)            \n",
    "    dgmDiagonalULC[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 5., inf]]), array([[ 3., inf]]), array([[ 5., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[ 8.,  9.],\n",
      "       [ 4., inf]]), array([[ 5., inf]]), array([[11., 12.],\n",
      "       [ 5., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[ 8.,  9.],\n",
      "       [ 3., inf]]), array([[ 8., 11.],\n",
      "       [ 3., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[12., 14.],\n",
      "       [ 4., inf]]), array([[ 4., inf]]), array([[11., 15.],\n",
      "       [ 4., inf]]), array([[ 3., inf]]), array([[ 9., 15.],\n",
      "       [ 4., inf]]), array([[ 9., 11.],\n",
      "       [ 3., inf]]), array([[ 7.,  9.],\n",
      "       [10., 13.],\n",
      "       [ 3., inf]]), array([[ 8.,  9.],\n",
      "       [ 4., inf]]), array([[ 8., 10.],\n",
      "       [ 4., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmDiagonalULC[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 5. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A digram\n",
    "print(dgmDiagonalULC[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 3. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print z diagram\n",
    "print(dgmDiagonalULC[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch process probing scanning-from-lower-left of all letters\n",
    "Looping through all the letters and generate 26 diagrams as arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "letters = genfromtxt('letters.csv', delimiter=',') # Upload the file\n",
    "\n",
    "dgmAngleLF = [None]*26 #Initialize an empty list\n",
    "for i in range(26):\n",
    "    letter_one_line=letters[i,:]\n",
    "\n",
    "    # initialize matrix of size 10x10 with all values 100\n",
    "    letter=np.full((10, 10), 100)\n",
    "\n",
    "    # convert one line letter to 10x10 matrix replacing zeros with 100\n",
    "    for k in range(1,101):\n",
    "        if letter_one_line[k]==1.0:\n",
    "            row=int((k-1)/10) \n",
    "            column=(k-1)%10 \n",
    "            letter[row,column]=max(9-(k-1)%10,9-int((k-1)/10))             \n",
    "    dgmAngleLF[i] = lower_star_img(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 2., inf]]), array([[ 5.,  7.],\n",
      "       [ 2., inf]]), array([[ 5., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 4., inf]]), array([[ 4., inf]]), array([[ 3., inf]]), array([[ 3., inf]]), array([[ 5.,  7.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 7.,  8.],\n",
      "       [ 2., inf]]), array([[ 4., inf]]), array([[ 7.,  8.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 2., inf]]), array([[ 5., inf]]), array([[ 2., inf]]), array([[ 4., inf]]), array([[ 5.,  6.],\n",
      "       [ 2., inf]]), array([[ 3., inf]]), array([[ 4., inf]])]\n"
     ]
    }
   ],
   "source": [
    "# Print A-Z diagrams\n",
    "print(dgmAngleLF[0:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print A digram\n",
    "print(dgmAngleLF[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 5.  6.]\n",
      " [ 2. inf]]\n"
     ]
    }
   ],
   "source": [
    "# Print z diagram\n",
    "print(dgmAngleLF[25])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Bottle Neck Distance Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction left-to-right\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDLR = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmLR[i][np.isinf(dgmLR[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDLR[i,j] = pm.bottleneck(dgmLR[i], dgmLR[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDLR[BNDLR>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringLR = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDLR)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "LR_test = clusteringLR.labels_\n",
    "LR_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction right-to-left\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDRL = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmRL[i][np.isinf(dgmRL[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDRL[i,j] = pm.bottleneck(dgmRL[i], dgmRL[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDRL[BNDRL>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringRL = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDRL)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "RL_test = clusteringRL.labels_\n",
    "RL_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction down-to-up\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDDU = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmDU[i][np.isinf(dgmDU[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDDU[i,j] = pm.bottleneck(dgmDU[i], dgmDU[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDDU[BNDDU>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringDU = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDDU)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "DU_test = clusteringDU.labels_\n",
    "DU_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction up-to-down\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDUD = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmUD[i][np.isinf(dgmUD[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDUD[i,j] = pm.bottleneck(dgmUD[i], dgmUD[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDUD[BNDUD>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringUD = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDUD)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "UD_test = clusteringUD.labels_\n",
    "UD_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction angle from-upper-left\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDAngle = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmAngle[i][np.isinf(dgmAngle[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDAngle[i,j] = pm.bottleneck(dgmAngle[i], dgmAngle[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDAngle[BNDAngle>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringAngle = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDAngle)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "A_test = clusteringAngle.labels_\n",
    "A_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1,\n",
       "       0, 2, 0, 0])"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every diagonally from-lower-left\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDDiagonal = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmDiagonal[i][np.isinf(dgmDiagonal[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDDiagonal[i,j] = pm.bottleneck(dgmDiagonal[i], dgmDiagonal[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDDiagonal[BNDDiagonal>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringDiagonal = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDDiagonal)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "D_test = clusteringDiagonal.labels_\n",
    "D_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0,\n",
       "       0, 0, 0, 0])"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction left-to-right\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDULC = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmDiagonalULC[i][np.isinf(dgmDiagonalULC[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDULC[i,j] = pm.bottleneck(dgmDiagonalULC[i], dgmDiagonalULC[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDULC[BNDULC>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringULC = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDULC)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "ULC_test = clusteringULC.labels_\n",
    "ULC_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0,\n",
       "       0, 0, 0, 0])"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the persim package and run the test in every direction left-to-right\n",
    "import persim as pm\n",
    "\n",
    "# Set an empty pairwise distance matrix for future bottleneck distance input\n",
    "BNDALF = np.zeros((26,26))\n",
    "\n",
    "\n",
    "# Change infinities to very large numbers\n",
    "for i in range(26):\n",
    "    dgmAngleLF[i][np.isinf(dgmAngleLF[i])] = 10000\n",
    "\n",
    "# Calculate bottleneck distances and input into the pairwise matrix\n",
    "for i in range(26):\n",
    "    for j in range(26):\n",
    "        BNDALF[i,j] = pm.bottleneck(dgmAngleLF[i], dgmAngleLF[j])\n",
    "\n",
    "# The very large values should be set to 0 by bottleneck definity (since the very large distances would be inifinity)\n",
    "BNDALF[BNDALF>1000]=0\n",
    "\n",
    "# Now we look to perform clustering on this pairwise distance matrix. For simplicity we use sklearn's Agglomerative Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "# For now we set 3 clusters, but we can change this and look for better results in our model. A lower number here will prevent overfitting.\n",
    "clusteringALF = AgglomerativeClustering(n_clusters = 3,\n",
    "                                     affinity = \"precomputed\",\n",
    "                                     linkage = \"average\").fit(BNDULC)\n",
    "\n",
    "# This will output a vector of length 26 representing a number for each letter for this scan.\n",
    "ALF_test = clusteringALF.labels_\n",
    "ALF_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0, 0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,\n",
       "       2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2,\n",
       "       2, 1, 2, 1, 0, 2, 1, 2, 2, 1, 1, 0, 0, 0, 2, 0, 1, 2, 2, 0, 0, 0,\n",
       "       2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 1, 1, 1,\n",
       "       2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 0,\n",
       "       0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,\n",
       "       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 2, 0, 1, 0, 0, 0, 0, 0])"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array = np.concatenate((LR_test, RL_test, DU_test, UD_test, A_test, D_test, ULC_test, ALF_test))\n",
    "test_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(208,)"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(test_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_array = np.reshape(test_array,(8,26)).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2, 0, 2, 0, 2, 2, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [2, 2, 2, 2, 2, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [1, 1, 1, 1, 1, 0, 0, 0],\n",
       "       [1, 2, 1, 2, 1, 0, 0, 0],\n",
       "       [2, 2, 2, 2, 2, 2, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 2, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [1, 2, 1, 2, 1, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [2, 0, 2, 0, 2, 0, 0, 0],\n",
       "       [2, 0, 2, 0, 2, 2, 0, 0],\n",
       "       [2, 0, 2, 0, 2, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [2, 0, 2, 0, 2, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [0, 2, 0, 2, 0, 0, 2, 2],\n",
       "       [2, 0, 2, 0, 2, 1, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 1, 1],\n",
       "       [2, 0, 2, 0, 2, 1, 0, 0],\n",
       "       [2, 0, 2, 0, 2, 0, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 2, 0, 0],\n",
       "       [1, 0, 1, 0, 1, 0, 0, 0],\n",
       "       [0, 2, 0, 2, 0, 0, 0, 0]])"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(26, 8)"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(test_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LR_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RL_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DU_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n",
       "       0, 0, 0, 2])"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "UD_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2,\n",
       "       2, 1, 1, 0])"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1,\n",
       "       0, 2, 0, 0])"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_array[:,5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1,\n",
       "       0, 2, 0, 0])"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "D_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0,\n",
       "       0, 0, 0, 0])"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ULC_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0,\n",
       "       0, 0, 0, 0])"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ALF_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Observing linear dipendencies\n",
    "## LR, DU, Angle\n",
    "## RL, UD all have similar characteristics\n",
    "## Diagonal scanning provided unique characteristics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
